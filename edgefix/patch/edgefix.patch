From d7811ad2a63f66e51f621ec491dcda4dbf3cb4c9 Mon Sep 17 00:00:00 2001
From: msfkonsole <msfkonsole@gmail.com>
Date: Mon, 15 Feb 2016 12:59:59 +0700
Subject: [PATCH] input: touchscreen: try to fix edge bug

Signed-off-by: Ashish Kotnala <ashishkotnala1.ak@gmail.com>
---
 drivers/input/touchscreen/atmel/atmel_mxt_ts.c | 94 ++------------------------
 1 file changed, 4 insertions(+), 90 deletions(-)

diff --git a/drivers/input/touchscreen/atmel/atmel_mxt_ts.c b/drivers/input/touchscreen/atmel/atmel_mxt_ts.c
index 8dcf2ae..b4863992 100644
--- a/drivers/input/touchscreen/atmel/atmel_mxt_ts.c
+++ b/drivers/input/touchscreen/atmel/atmel_mxt_ts.c
@@ -29,11 +29,6 @@
 #include <linux/of_gpio.h>
 #include <linux/kthread.h>
 #include <linux/interrupt.h>
-#include <mach/gpiomux.h>
-#ifdef CONFIG_FB
-#include <linux/notifier.h>
-#include <linux/fb.h>
-#endif
 
 #if defined(CONFIG_MXT_PLUGIN_SUPPORT)
 #include "plug.h"
@@ -548,7 +543,6 @@ struct mxt_data {
 	u8 atchthr;
 	u8 sensitive_mode;
 	int golden_ok;
-	bool keys_off;
 
 	/* Slowscan parameters	*/
 	int slowscan_enabled;
@@ -623,10 +617,6 @@ struct mxt_data {
 	unsigned long busy;
 #endif
 
-#ifdef CONFIG_FB
-	struct notifier_block fb_notif;
-#endif
-
 #if defined(CONFIG_MXT_PLUGIN_SUPPORT)
 	struct plug_interface plug_in;
 #endif
@@ -1289,9 +1279,8 @@ static void mxt_proc_t15_messages(struct mxt_data *data, u8 *msg)
 	unsigned long keystates = le32_to_cpu(msg[2]);
 	int index = data->current_index;
 
-	if(data->keys_off) {
+	if (!input_dev)
 		return;
-	}
 
 	for (key = 0; key < pdata->config_array[index].key_num; key++) {
 		curr_state = test_bit(key, &data->keystatus);
@@ -3196,36 +3185,6 @@ static ssize_t mxt_pause_store(struct device *dev,
 	}
 }
 
-static ssize_t mxt_keys_off_show(struct device *dev,
-	struct device_attribute *attr, char *buf)
-{
-	struct mxt_data *data = dev_get_drvdata(dev);
-	int count;
-	char c;
-
-	c = data->keys_off ? '1' : '0';
-	count = sprintf(buf, "%c\n", c);
-
-	return count;
-}
-
-static ssize_t mxt_keys_off_store(struct device *dev,
-	struct device_attribute *attr, const char *buf, size_t count)
-{
-	struct mxt_data *data = dev_get_drvdata(dev);
-	int i;
-
-	if (sscanf(buf, "%u", &i) == 1 && i < 2) {
-		data->keys_off = (i == 1);
-
-		dev_dbg(dev, "%s\n", i ? "hw keys off" : "hw keys on");
-		return count;
-	} else {
-		dev_dbg(dev, "keys_off write error\n");
-		return -EINVAL;
-	}
-}
-
 static ssize_t mxt_debug_enable_show(struct device *dev,
 	struct device_attribute *attr, char *buf)
 {
@@ -4065,8 +4024,6 @@ static DEVICE_ATTR(debug_enable, S_IWUSR | S_IRUSR, mxt_debug_enable_show,
 			mxt_debug_enable_store);
 static DEVICE_ATTR(pause_driver, S_IWUSR | S_IRUSR, mxt_pause_show,
 			mxt_pause_store);
-static DEVICE_ATTR(keys_off, S_IWUSR | S_IRUSR, mxt_keys_off_show,
-			mxt_keys_off_store);
 static DEVICE_ATTR(version, S_IRUGO, mxt_version_show, NULL);
 static DEVICE_ATTR(build, S_IRUGO, mxt_build_show, NULL);
 static DEVICE_ATTR(slowscan_enable, S_IWUSR | S_IRUSR,
@@ -4087,7 +4044,6 @@ static struct attribute *mxt_attrs[] = {
 	&dev_attr_debug_enable.attr,
 	&dev_attr_pause_driver.attr,
 	&dev_attr_version.attr,
-	&dev_attr_keys_off.attr,
 	&dev_attr_build.attr,
 	&dev_attr_slowscan_enable.attr,
 	&dev_attr_update_fw_flag.attr,
@@ -4260,49 +4216,6 @@ static int mxt_input_disable(struct input_dev *in_dev)
 	return error;
 }
 
-#ifdef CONFIG_FB
-static int fb_notifier_cb(struct notifier_block *self,
-			unsigned long event, void *data)
-{
-	struct fb_event *evdata = data;
-	int *blank;
-	struct mxt_data *mxt_data =
-		container_of(self, struct mxt_data, fb_notif);
-
-	if (evdata && evdata->data && event == FB_EVENT_BLANK && mxt_data) {
-		blank = evdata->data;
-		if (*blank == FB_BLANK_UNBLANK) {
-			dev_info(&mxt_data->client->dev, "##### UNBLANK SCREEN #####\n");
-			mxt_input_enable(mxt_data->input_dev);
-		} else if (*blank == FB_BLANK_POWERDOWN) {
-			dev_info(&mxt_data->client->dev, "##### BLANK SCREEN #####\n");
-			mxt_input_disable(mxt_data->input_dev);
-		}
-	}
-
-	return 0;
-}
-
-static void configure_sleep(struct mxt_data *data)
-{
-	int ret;
-
-	data->fb_notif.notifier_call = fb_notifier_cb;
-	ret = fb_register_client(&data->fb_notif);
-	if (ret) {
-		dev_err(&data->client->dev,
-			"Unable to register fb_notifier, err: %d\n", ret);
-	}
-}
-#else
-static void configure_sleep(struct mxt_data *data)
-{
-	data->input_dev->enable = mxt_input_enable;
-	data->input_dev->disable = mxt_input_disable;
-	data->input_dev->enabled = true;
-}
-#endif
-
 static int mxt_initialize_input_device(struct mxt_data *data)
 {
 	struct device *dev = &data->client->dev;
@@ -4329,6 +4242,9 @@ static int mxt_initialize_input_device(struct mxt_data *data)
 	input_dev->dev.parent = dev;
 	input_dev->open = mxt_input_open;
 	input_dev->close = mxt_input_close;
+	input_dev->enable = mxt_input_enable;
+	input_dev->disable = mxt_input_disable;
+	input_dev->enabled = true;
 
 	__set_bit(EV_ABS, input_dev->evbit);
 	__set_bit(EV_KEY, input_dev->evbit);
@@ -4402,8 +4318,6 @@ static int mxt_initialize_input_device(struct mxt_data *data)
 
 	data->input_dev = input_dev;
 
-	configure_sleep(data);
-
 	return 0;
 }
 
